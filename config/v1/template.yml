##For environmental variables used the following snippet
## !Join ['', ['{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'PARAMETER_NAME', '}}']]

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AOAC Back end api

Parameters:
  Env:
    Type: String
    Description: the environment of the lambdas functions
    AllowedValues:
      - development
      - testing
      - production
      - staging
      - local
    Default: local
  Service:
    Type: String
    Description: the service that the template is corresponding to
    AllowedValues:
      - aoac
    Default: aoac


Globals:
  Function:
    MemorySize: 2048
    Runtime: go1.x
    Timeout: 15
    Architectures:
      - x86_64
    Tracing: Active
    Environment:
      Variables:
        ENV: !Ref Env

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../app/lambda/v1/hello-world/
      Handler: hello-world
      Environment:
        Variables:
          SECRET_ENV: !Join ['', ['{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'ENV', '}}']]
          COGNITO_USER_POOL_ID: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'COGNITO_USER_POOL_ID', '}}' ] ]
          COGNITO_CLIENT_ID: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'COGNITO_CLIENT_ID', '}}' ] ]
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /v1/hello
            Method: GET

  CreateAdminFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../app/lambda/v1/create-admin/
      Handler: create-admin
      Environment:
        Variables:
          SECRET_ENV: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'ENV', '}}' ] ]
          COGNITO_USER_POOL_ID: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'COGNITO_USER_POOL_ID', '}}' ] ]
          COGNITO_CLIENT_ID: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'COGNITO_CLIENT_ID', '}}' ] ]
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /v1/admin
            Method: Post

  GetAdminFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../app/lambda/v1/get-admin/
      Handler: get-admin
      Environment:
        Variables:
          SECRET_ENV: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'ENV', '}}' ] ]
          COGNITO_USER_POOL_ID: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'COGNITO_USER_POOL_ID', '}}' ] ]
          COGNITO_CLIENT_ID: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'COGNITO_CLIENT_ID', '}}' ] ]
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /v1/admin
            Method: Get

  GetAdminByIDFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../app/lambda/v1/get-admin-by-id/
      Handler: get-admin-by-id
      Environment:
        Variables:
          SECRET_ENV: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'ENV', '}}' ] ]
          COGNITO_USER_POOL_ID: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'COGNITO_USER_POOL_ID', '}}' ] ]
          COGNITO_CLIENT_ID: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'COGNITO_CLIENT_ID', '}}' ] ]
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /v1/admin/{id}
            Method: Get

  UpdateAdminFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../app/lambda/v1/update-admin/
      Handler: update-admin-by-id
      Environment:
        Variables:
          SECRET_ENV: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'ENV', '}}' ] ]
          COGNITO_USER_POOL_ID: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'COGNITO_USER_POOL_ID', '}}' ] ]
          COGNITO_CLIENT_ID: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'COGNITO_CLIENT_ID', '}}' ] ]
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /v1/admin/{id}
            Method: Put

  DeleteAdminFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../app/lambda/v1/delete-admin/
      Handler: delete-admin-by-id
      Environment:
        Variables:
          SECRET_ENV: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'ENV', '}}' ] ]
          COGNITO_USER_POOL_ID: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'COGNITO_USER_POOL_ID', '}}' ] ]
          COGNITO_CLIENT_ID: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'COGNITO_CLIENT_ID', '}}' ] ]
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /v1/admin/{id}
            Method: Delete

  LoginAdminFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../app/lambda/v1/admin-login/
      Handler: login-admin
      Environment:
        Variables:
          SECRET_ENV: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'ENV', '}}' ] ]
          COGNITO_USER_POOL_ID: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'COGNITO_USER_POOL_ID', '}}' ] ]
          COGNITO_CLIENT_ID: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'COGNITO_CLIENT_ID', '}}' ] ]
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /v1/admin/login
            Method: Post
            
  RefreshAdminSessionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../app/lambda/v1/admin-refresh-token/
      Handler: refresh-admin-session
      Environment:
        Variables:
          SECRET_ENV: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'ENV', '}}' ] ]
          COGNITO_USER_POOL_ID: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'COGNITO_USER_POOL_ID', '}}' ] ]
          COGNITO_CLIENT_ID: !Join [ '', [ '{{resolve:secretsmanager:', !Ref Service, '/', !Ref Env, ':SecretString:', 'COGNITO_CLIENT_ID', '}}' ] ]
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /v1/admin/login/refresh
            Method: Post